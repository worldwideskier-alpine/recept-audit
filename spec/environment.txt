環境仕様書
版数: v1.0.6
更新: 2025-09-28 10:28:55 JST

# 0) 目的・適用範囲（MUST）
- 本書は「実行/配備環境の実値・方言ルール」を唯一の権威として定義し、他仕様書からの重複記載は不可（省略）。
- 生成仕様書は環境に依存しない共通規範を定める。DB 方言等の可否は本書が拘束力を持つ。

# 2) プラットフォーム/言語（移管）— MUST
- PHP 8.3（CLI/CGI同一）、フレームワーク不使用、PSR非必須。
- DB: **MySQL 8.0.19 以上（MariaDB 非対象）**。文字コードは **utf8mb4**、照合は **utf8mb4_0900_ai_ci**。不可時は **utf8mb4_unicode_ci** に自動フォールバックし、**ログ記録**。

# 3) ランタイム前提（移管: 機能仕様書 §0 抜粋）— MUST
- ランタイム: PHP 8.3、**Apache + mod_rewrite**、有効な cURL 拡張。
- **Apache ディレクティブ要件（サブディレクトリ配備を含む）**
  - VirtualHost/Directory 設定で **`AllowOverride FileInfo`（または `All`）** を付与。
  - `.htaccess` によって **URL書き換え（BNORM）** を行う。
  - **`Options -MultiViews -Indexes` を必須**（MultiViews による内容ネゴシエーションを無効化）。
  - **`RewriteBase` は原則禁止**。やむを得ず使用する場合のみ、**実際の配備パス**を明記（例: `/medical/recept_audit/`）。
- フロントコントローラ: **{BASE}/app.php**（サブディレクトリ配備に非依存／BNORM）。
- **HTTP クライアントは cURL のみを使用（file_get_contents 等は使用禁止）**。
- DB: **MySQL 8.0.19 以上**を要求（MariaDB 非対象）。

### 3.x) .htaccess 正本（BNORM / サブディレクトリ安全版 / MUST）
以下を **そのまま貼付**して使用すること（**{BASE}/.htaccess**）。

```apache
# BNORM-safe rewrite (subdirectory proof)
Options -Indexes -MultiViews
RewriteEngine On

# Pass through existing files/dirs
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^env-lite$ env-lite.php [L]
RewriteRule ^health-lite$ health-lite.php [L]

# (Optional) static pass-through
RewriteRule ^assets/ - [L]

# Everything else to this directory's app.php
RewriteRule ^ app.php [L,QSA]

# NOTE: Do not set "RewriteBase /".
# If you must: RewriteBase /<your-subdir>/   (and keep "app.php" relative)
```

# 4) DB 接続（実値、移管: 機能仕様書 付録A）— MUST
付録A：DB接続情報ビルドシート（SOT）
- host: mysql320.phy.lolipop.lan / port: 3306 / name: LAA1577731-recept
- user: LAA1577731 / pass: tP2H3ibSBegLQnDs
- charset: utf8mb4 / collation: utf8mb4_0900_ai_ci（不可時は unicode_ci にフォールバックしログ記録）
※ config.php に **文字列そのまま**でベタ書き。

# 5) ENV 設定（移管: 機能仕様書 §14）— MUST
=== 14. 設定（ENV） ===
- SYNC_MAX_PER_CYCLE=1000 / SYNC_DB_MIN_ROWS=100（実閾値は max(この値,25)）。
- SYNC_SEED_URLS: 種ページURL（複数可）。SYNC_ALLOWED_HOSTS: 許可ホスト（カンマ区切り）。
- HTTP_TIMEOUT=30 / HTTP_RETRY=3。STORAGE_BASE=storage。LOG_LEVEL=info。

# 6) CRON/Runner（移管: 機能仕様書 §7）— MUST
=== 7. cron 設計（単一cron + EmptyDB Auto-Fetch） ===
- crontab 例（Asia/Tokyo）: */10 * * * * **cd {BASE}** && php cli/sync.php --cycle >> storage/logs/cron.sync.log 2>&1
- `--cycle` の挙動（疑似）:
  - 取得排他成功 → 空判定
  - 空判定の条件:
    * コア表（tenants/users/departments/provider_rules）のいずれかが存在しない
    * provider_rules が 0 または ENV最小値未満（min 25）
    * departments が 35 未満
  - 空なら強制取得（--force）→ 変化があれば build_rules → import_db を順に実行。
  - 新着 0 が 3サイクル継続したら backoff を指数的に最大 6h まで延長。

# 7) 追補：DB 方言ロック & DDL/Upsert/ログ・HTTP・Apache（MUST）
- **ENV-DB-DIALECT-001**
  **要件:** 本環境の DB 方言は **MySQL 8.0.x** とする（MariaDB 非対象）。
  **受入判定:** COMPLIANCE.json に `"db_engine":"mysql8"` が存在。
  **不許可例:** `"mysql"` 以外の値、空欄。

- **ENV-DB-DDL-POLICY-MySQL-001**
  **要件:** **MySQL では `CREATE INDEX IF NOT EXISTS` を禁止。** インデックス確保は
  `information_schema.STATISTICS` による**存在確認 → `CREATE INDEX` 実行**の二段階で行う。
  **受入判定:** スキーマ確保ロジックに `INDEX_NAME='<idx>'` を条件とした存在確認があり、未存在時のみ `CREATE INDEX`。
  **不許可例:** `CREATE INDEX IF NOT EXISTS ...` を DDL/コードに記述。

- **ENV-DB-UPSERT-MySQL-001**
  **要件:** Upsert は **`INSERT … ON DUPLICATE KEY UPDATE`** 方式とし、`UPDATE` 句で `VALUES()` の参照は禁止。
  **受入判定:** 静的検査で `VALUES(` を Upsert 文内に検出しない。
  **不許可例:** `... UPDATE col=VALUES(col)`。

- **ENV-DB-CHARSET-001**
  **要件:** 接続は **utf8mb4 / utf8mb4_0900_ai_ci**。不可時は **utf8mb4_unicode_ci** に自動フォールバックし、**L2ログ `charset_fallback`** を必ず出力。
  **受入判定:** フォールバック発生時にログ行が存在。

- **ENV-HEALTH-MINBOOT-MySQL-001**
  **要件:** `/health` は**最小ブート＝スキーマ自己確保のみ**を行う。データの流し込み（seed/import）は行わない。
  **受入判定:** `/health` 実行後にテーブル/インデックス/固定行が整備されるが、レコード件数は増分しない。

- **ENV-HEALTH-LOG-MySQL-001**
  **要件:** `/health` の結果を **1行JSON(L2)** で必ず記録：成功時 `health_min_boot_pass`、失敗時 `health_min_boot_fail`。
  **受入判定:** `/health` 実行で `storage/logs/app.log` に該当イベントが出力。

- **ENV-SCHEMA-LOG-MySQL-001**
  **要件:** スキーマ適用時、各 DDL 失敗は `schema_exec_failed`、固定行の確保完了で `schema_bootstrap_ok`、
  インデックスは `schema_index_created|exists|failed` を L2ログに出力。
  **受入判定:** それぞれのケースでログ行が残る。

- **ENV-NOSTORE-ALL-001**
  **要件:** 全応答に `Cache-Control: no-store` を付与（**3xx を含む、301 禁止**）。
  **受入判定:** 代表 URL 群（`/`, `/provider`, `/env`, `/env/` ほか）で `no-store` を確認、かつ 301 が使われていない。

- **ENV-APACHE-MULTIVIEWS-LOCK-001（新設 / MUST）**
  **要件:** 配備ディレクトリの `.htaccess` に **`Options -MultiViews` を明示**し、MultiViews を無効化すること（内容ネゴシエーション起因の 404/先行処理を防止）。
  **受入判定:** `.htaccess` に `Options -MultiViews` の記載が存在する。
  **不許可例:** `Options MultiViews` または未記載。

- **ENV-APACHE-HTACCESS-BNORM-001（新設 / MUST）**
  **要件:** `.htaccess` は **ディレクトリ相対で `app.php` へ集約**し、**`RewriteBase /` の固定を禁止**（必要時のみ実パスを明記）。
  **受入判定:** `.htaccess` に `RewriteEngine On`・`RewriteRule ^ app.php` が存在し、`RewriteBase /` 単独は検出 0 件。
  **不許可例:** `RewriteBase /` の固定、`header('Location: /...')` 等の絶対パス固定に依存する構成。

- **ENV-APACHE-ALLOWOVERRIDE-001（新設 / MUST）**
  **要件:** VirtualHost/Directory に **`AllowOverride FileInfo`（以上）** が設定され、`.htaccess` の記述が有効になること。
  **受入判定:** vhost 設定レビューで該当ディレクティブが確認できる。

# 7.x) 追補：コード実装スタイルの環境ロック（MUST）
- **ENV-CODE-DB-API-STYLE-LOCK-001（MUST）**  
  **要件:** DBアクセスは **`App\Support\DB` の静的ファサード**を**必ず提供**する（`pdo()` / `q()` / `ensure_index()` を静的公開）。内部実装が関数でも良いが、外部インターフェースは**常にクラス**。  
  **受入判定:** `app/Support/DB.php` に `class DB` が存在し、`php -r "require 'app/Support/DB.php'; echo class_exists('App\\Support\\DB')?'OK':'NG';"` が `OK`。  
  **不許可例:** `DB::q()` を呼んでいるのに `class App\Support\DB` が存在しない／関数のみ定義。

- **ENV-CODE-MSC-SELF-LOCK-001（MUST）**  
  **要件:** Support/** の各ファイルは、**先頭〜80行以内**に自分が直接使う自前シンボル（Config/DB/Log/Res 等）を `require_once` で**自己完結**させる（FCの読み込み順に依存しない）。  
  **受入判定:** `grep -RIl 'App\\Support\\log_line' app/Support | xargs -I{} head -n 80 {} | grep -q 'require_once .*Log.php'` 等の静的検査に合格。  
  **不許可例:** `Schema.php` が `log_line()` を呼ぶのに `Log.php` を先頭〜80行で `require_once` していない。

- **ENV-CODE-HEALTH-NO-CLASSERR-001（MUST）**  
  **要件:** `/health` 実行時、**クラス未定義エラーを出さない**こと（最小ブートの完了が前提）。  
  **受入判定:** `/health` 実行直後の `storage/logs/app.log` に `Class "App\Support\DB" not found` を**含まない**（1件でも出たら FAIL）。  
  **不許可例:** 上記エラーや同等の `Class ... not found` が記録される。

- **ENV-CODE-NO-LEGACY-TEMPLATE-001（MUST）**  
  **要件:** 生成時に**過去テンプレ/外部雛形の持ち込みを禁止**。**本チャットで提示された正本仕様群のみ**を SOT とし、ビルドログに `source="spec-only"` を記録。  
  **受入判定:** `evidence/pkg/FULL_FILE_ONLY_OK.txt` が存在し、`evidence/pkg/BUILD_LOG.txt` に `source=spec-only` が記録されている。  
  **不許可例:** ビルドログが不在／`source=template` 等の記録がある。

- **ENV-CODE-REDIR-BNORM-LOCK-002（MUST/強化）**  
  **要件:** リダイレクトは**必ず** `href()`（BNORM）経由で Location を生成し、**直書き `header('Location: /...')` を禁止**。  
  **受入判定:** `app/Support/Res.php` 以外で `header('Location:` が**0件**、かつ `redirect()` 実装内で `href(` を使用。  
  **不許可例:** 任意のページで `header('Location: /foo')` を直接呼ぶ。

# 8) RTM（要件トレーサビリティ → 検査仕様書フック）
ENV-DB-DIALECT-001,"db_engine=mysql8 を COMPLIANCE.json で確認","COMPLIANCE.json"
ENV-DB-DDL-POLICY-MySQL-001,"IF NOT EXISTS 付き INDEX 禁止（grep）＋ E2E で index 存在確認","schema.sql; app/Support/Schema.php"
ENV-DB-UPSERT-MySQL-001,"VALUES() を Upsert で使用しない（静的）","app/Support"
ENV-DB-CHARSET-001,"照合フォールバック時に charset_fallback を L2ログへ","app/Support/DB.php; storage/logs/app.log"
ENV-HEALTH-MINBOOT-MySQL-001,"/health=最小ブート（スキーマのみ）","app.php; schema.sql"
ENV-HEALTH-LOG-MySQL-001,"/health 成否ログ（health_min_boot_pass/fail）","storage/logs/app.log"
ENV-SCHEMA-LOG-MySQL-001,"schema_exec_failed / schema_bootstrap_ok / schema_index_* を記録","app/Support/Schema.php; storage/logs/app.log"
ENV-NOSTORE-ALL-001,"全3xx含め no-store・301禁止",".htaccess; app.php"
ENV-APACHE-MULTIVIEWS-LOCK-001,"Options -MultiViews を .htaccess へ明示",".htaccess"
ENV-APACHE-HTACCESS-BNORM-001,"RewriteRule ^ app.php / RewriteEngine On / RewriteBase 固定禁止",".htaccess"
ENV-APACHE-ALLOWOVERRIDE-001,"AllowOverride FileInfo 以上を vhost で設定","httpd.conf (vhost) 設定"
ENV-CODE-DB-API-STYLE-LOCK-001,"`App\Support\DB` 静的ファサードを必ず提供","app/Support/DB.php; tools/run_checks.sh; php -r 検査証跡"
ENV-CODE-MSC-SELF-LOCK-001,"Support自己完結（先頭〜80行で require_once）","app/Support/**; tools/run_checks.sh; evidence/static/MSC_LOG_DEP_OK.txt"
ENV-CODE-HEALTH-NO-CLASSERR-001,"/health 実行で Class not found を出さない","app.php; storage/logs/app.log; evidence/runtime/HEALTH_NO_CLASSERR_OK.txt"
ENV-CODE-NO-LEGACY-TEMPLATE-001,"過去テンプレ禁止・spec-only を BUILD_LOG に記録","evidence/pkg/FULL_FILE_ONLY_OK.txt; evidence/pkg/BUILD_LOG.txt"
ENV-CODE-REDIR-BNORM-LOCK-002,"Location 直書き禁止・href()必須","app/Support/Res.php; evidence/static/REDIR_ABS_PATH_OK.txt; REDIR_BNORM_USE_OKtxt"

# 付録A：DB接続情報（SOT）
- 本章の値を **唯一の実値**（Single Source of Truth）とし、他仕様書では再掲しない。
- 値の変更は本書の改版でのみ行う（差分ではなくフル版で改版）。
