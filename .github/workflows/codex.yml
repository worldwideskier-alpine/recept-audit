name: "Codex Generate"

on:
  workflow_dispatch:
    inputs:
      model:
        description: "（任意）使用するモデル名（未指定なら既定）"
        required: false

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: "codex-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  codex:
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Set up git identity"
        shell: "bash"
        run: |
          set -euo pipefail
          git config --global user.email "ci-bot@example.invalid"
          git config --global user.name  "CI Bot"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: "Build composite prompt"
        shell: "bash"
        run: |
          set -euo pipefail
          mkdir -p "ai"
          {
            echo "# Project specification (composite)"
            if [ -f "AGENTS.md" ]; then
              echo
              echo "## AGENTS.md"
              cat "AGENTS.md"
            fi
            for f in \
              "spec/generation.txt" \
              "spec/testing.txt" \
              "spec/environment.txt" \
              "spec/functional.txt"
            do
              if [ -f "$f" ]; then
                echo
                echo "## $f"
                cat "$f"
              else
                echo
                echo "## $f"
                echo "(missing)"
              fi
            done
          } > "ai/prompt.md"

      - name: "Preflight: check OPENAI_API_KEY"
        env:
          OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
        shell: "bash"
        run: |
          set -euo pipefail
          if [ -z "${OPENAI_API_KEY:-}" ]; then
            echo "::error::OPENAI_API_KEY is missing in repository secrets"; exit 1
          fi
          echo "OPENAI_API_KEY present"

      # モデル指定あり
      - name: "Run Codex (workspace-write, with model)"
        if: "${{ github.event.inputs.model != '' }}"
        id: "codex_with_model"
        uses: "openai/codex-action@main"
        env:
          OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
        with:
          openai-api-key: "${{ secrets.OPENAI_API_KEY }}"
          prompt-file: "ai/prompt.md"
          model: "${{ github.event.inputs.model }}"
          sandbox: "workspace-write"

      # モデル指定なし（既定モデル）
      - name: "Run Codex (workspace-write, default model)"
        if: "${{ github.event.inputs.model == '' }}"
        id: "codex"
        uses: "openai/codex-action@main"
        env:
          OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
        with:
          openai-api-key: "${{ secrets.OPENAI_API_KEY }}"
          prompt-file: "ai/prompt.md"
          sandbox: "workspace-write"

      - name: "Guard: drop workflow changes (.github/workflows)"
        shell: "bash"
        run: |
          set -euo pipefail
          if git status --porcelain | grep -E '^\s?[AMDR].*\.github/workflows/' >/dev/null 2>&1; then
            echo "::warning::Discarding changes under .github/workflows"
            git checkout -- ".github/workflows" || true
            git restore --staged ".github/workflows" || true
          fi

      - name: "Collect Codex message"
        id: "collect"
        shell: "bash"
        run: |
          set -euo pipefail
          MSG="${{ steps.codex.outputs['final-message'] }}"
          if [ -z "$MSG" ]; then MSG="${{ steps.codex_with_model.outputs['final-message'] }}"; fi
          {
            echo "msg<<EOF"
            echo "${MSG:-'(no message)'}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: "Create Pull Request"
        uses: "peter-evans/create-pull-request@v7"
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          title: "AI: Codex updates (full spec)"
          body: |
            Automated changes generated by Codex from a composite prompt.

            Final message:
            ${{ steps.collect.outputs.msg }}
          commit-message: "chore(ai): apply Codex changes (composite prompt)"
          branch: "ai/codex/batch-${{ github.run_id }}"
          base: "main"
