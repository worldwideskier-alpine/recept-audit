# .github/workflows/codex-generate.yml
name: Codex Generate (worker)

on:
  workflow_call:
    inputs:
      mode:
        description: "実行モード: full(完全生成) / incremental(差分)"
        required: false
        type: string
        default: "full"
      model:
        description: "OpenAI モデル名（未指定なら既定）"
        required: false
        type: string
        default: ""
    secrets:
      OPENAI_API_KEY:
        required: true
      GH_PAT_WORKFLOWS:
        required: false

permissions:
  contents: write
  pull-requests: write

env:
  # 仕様書（必要に応じて調整してください）
  SPEC_FILES: "spec/generation.txt spec/testing.txt spec/environment.txt spec/functional.txt"
  # 生成対象のパス（PR の add-paths にも使います）
  ALLOWED_GLOBS: |
    src/**
    tests/**
    tools/**
    storage/**
    logs/**
    app.php
    env-lite.php
    health-lite.php
    .htaccess
    ai/**

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ★ A案：キャッシュ指定を削除（ロックファイルが無い環境でも失敗しない）
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Preflight - OPENAI_API_KEY
        shell: bash
        run: |
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "::error::OPENAI_API_KEY is missing"
            exit 1
          fi

      - name: Make prompt directory
        shell: bash
        run: |
          mkdir -p ai
          # 既存の ai/prompt.md があれば優先。なければ SPEC から合成。
          if [ ! -f ai/prompt.md ]; then
            echo "# Spec prompt (auto generated)" > ai/prompt.md
            for f in $SPEC_FILES; do
              if [ -f "$f" ]; then
                echo -e "\n---\n# $f\n" >> ai/prompt.md
                cat "$f" >> ai/prompt.md
              fi
            done
          fi

      - name: Run Codex
        uses: openai/codex-action@main
        with:
          openai-api-key: "${{ secrets.OPENAI_API_KEY }}"
          prompt-file: "ai/prompt.md"
          model: "${{ inputs.model || '' }}"
          sandbox: "workspace-write"

      - name: Show diff summary
        shell: bash
        run: |
          echo "=== git status ==="
          git status --porcelain=v1 || true
          echo "=== git diff (stat) ==="
          git diff --stat || true

      - name: Configure git author
        shell: bash
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name  "github-actions[bot]"

      - name: Stage allowed paths
        shell: bash
        run: |
          # ALLOWED_GLOBS を行単位で解釈して add
          while IFS= read -r p; do
            [ -z "$p" ] && continue
            git add $p 2>/dev/null || true
          done <<< "${ALLOWED_GLOBS}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: "${{ secrets.GH_PAT_WORKFLOWS || github.token }}"
          branch: "ai/codex/batch-${{ github.run_id }}"
          title: "AI: generate code (mode=${{ inputs.mode }})"
          body: |
            Automated changes generated by Codex.
            - mode: `${{ inputs.mode }}`
            - model: `${{ inputs.model }}`
          add-paths: |
            src/**
            tests/**
            tools/**
            storage/**
            logs/**
            app.php
            env-lite.php
            health-lite.php
            .htaccess
            ai/**
          signoff: true
